<project name="Lab3Project" default="build" basedir=".">
    <!-- ========== Properties ========== -->
    <property file="build.properties"/>
    <!--    Lâys các thuộc tính từ build.properties -->

    <!--    Nhóm các file .jar lấy id là classpath -->
    <path id="library">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <!-- ========== Targets ========== -->
    <target name="clean">
        <echo message="Cleaning compiled classes and temp files..."/>
        <delete dir="${build.dir}"/>
        <delete dir="${target.dir}"/>
    </target>

    <target name="compile">
        <echo message="Compiling source code..."/>
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="library" includeantruntime="false"/>
    </target>

    <target name="build" depends="compile">
<!--        Sao chép thư mục lib vào build-->
        <copy todir="${build.dir}/webapp/lib">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
        <war destfile="${war.file}" webxml="${webapp.dir}/WEB-INF/web.xml">
            <manifest>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Version" value="1.0-SNAPSHOT"/>
            </manifest>
<!--            Các file dùng để xây dựng -->
            <fileset dir="${build.dir}/webapp">
                <include name="**/*"/>
                <exclude name="**/WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <target name="test" depends="build">
        <mkdir dir="${build.dir}/test-reports"/>
        <junit printsummary="yes">
            <classpath>
                <pathelement path="${classes.dir}"/>
                <path refid="library"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="true" todir="${build.dir}/test-reports">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <taskdef name="scp" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp">
        <classpath>
            <pathelement path="lib/jsch-0.1.55.jar"/>
            <pathelement path="lib/ant-jsch-1.10.12.jar"/>
        </classpath>
    </taskdef>

    <target name="scp" depends="build">
        <scp todir="${scp.host}"
             port="${scp.port}"
             password="${scp.password}"
             trust="true">
            <fileset dir="${build.dir}">
                <include name="**/*.war"/>
            </fileset>
        </scp>
    </target>

<!--    The jar file is used to connect with svn -->
    <target name="init-antcontrib">
        <taskdef resource="net/sf/antcontrib/antcontrib.properties">
            <classpath>
                <pathelement location="lib/ant-contrib-1.0b3.jar"/>
            </classpath>
        </taskdef>
    </target>


    <target name="try-compile">
<!--        Try to compile the revision-->
        <echo message="Trying revision: ${revision}"/>

        <exec executable="svn" dir="mysvn/main" failonerror="true">
            <arg value="update"/>
            <arg value="-r"/>
            <arg value="${revision}"/>
        </exec>

        <trycatch>
            <try>
                <antcall target="compile"/>
                <property name="working.revision" value="${revision}"/>
            </try>
            <catch>
                <echo message="Compile failed for revision ${revision}"/>
            </catch>
        </trycatch>

        <if>
            <isset property="working.revision"/>
            <then>
                <echo message="Found working revision: ${working.revision}"/>
                <math result="revision_plus_1" operand1="${working.revision}" operation="add" operand2="1"/>
                <propertyregex property="revision_plus_1" input="${revision_plus_1}" regexp="^([0-9]+)\.?.*$" replace="\1"/>

                <exec executable="svn" dir="mysvn/main" output="mysvn/revision-diff.txt">
                    <arg value="diff"/>
                    <arg value="-r"/>
                    <arg value="${working.revision}:${revision_plus_1}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="history" depends="init-antcontrib">
        <exec executable="svn" dir="mysvn/main" outputproperty="revisions" failonerror="true">
            <arg value="log"/>
            <arg value="-q"/>
            <arg value="-r"/>
            <arg value="HEAD:1"/>
            <arg value="--limit"/>
            <arg value="10"/>
        </exec>

        <script language="javascript">
            <![CDATA[
        var raw = project.getProperty("revisions");
        var lines = raw.split("\n");
        var revs = [];
        for (var i = 0; i < lines.length; i++) {
            if (lines[i].startsWith("r")) {
                var r = lines[i].split(" ")[0].substring(1);
                revs.push(r);
            }
        }
        project.setProperty("revision.list", revs.join(","));
        ]]>
        </script>

        <foreach list="${revision.list}" param="revision" target="try-compile"/>
    </target>


</project>
